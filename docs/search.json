[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "ABCD Demo Analysis",
    "section": "",
    "text": "Follow along at:\nLoad necessary libraries\n\nRPython\n\n\n\nlibrary(dplyr)\nlibrary(lme4)\nlibrary(lmerTest)\n\nlibrary(ggplot2)\n\n\n\n\nimport pandas as pd\nimport numpy as np\n\nimport statsmodels.api as sm\nimport statsmodels.formula.api as smf\n\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n\n\n\nRead in curated dataset\n\nRPython\n\n\n\n# watch out for periods in directory names...\n\nfpath &lt;- '../data/02_intermediate/dataset.csv/dataset.csv' # you'll need to adjust file directories\ndf &lt;- read.csv(\n  fpath,\n  na.strings = c(\"NA\", ' ', 999, 777) # blank spaces are missing data\n  )\nhead(df)\n\n\n  \n\n\n\n\n\n\n# watch out for periods in directory names...\n\nfpath = '../data/02_intermediate/dataset.csv/dataset.csv' # you'll need to adjust file directories\n\ndf = pd.read_csv(fpath, na_values=['NA', ' ', 999, 777]) # blank spaces are missing data\ndf.head()\n\n  participant_id session_id  ...  su_y_sui__use__alc_001  su_y_sui__use__alc_001__l\n0   sub-003RTV85    ses-00A  ...                     NaN                        NaN\n1   sub-003RTV85    ses-01A  ...                     NaN                        NaN\n2   sub-003RTV85    ses-02A  ...                     NaN                        NaN\n3   sub-003RTV85    ses-03A  ...                     NaN                        0.0\n4   sub-003RTV85    ses-04A  ...                     NaN                        0.0\n\n[5 rows x 42 columns]\n\n\n\n\n\nBut… you’re not always going to have a curated dataset…\nSort out variable types\n\nRPython\n\n\n\n# sort out variables, both to keep organized and arrange data types\npredictors &lt;- c(\n  'mr_y_smri__vol__aseg__ag__lh_sum', # left amygdala vol\n  'mr_y_smri__vol__aseg__ag__rh_sum' # right amygdala vol\n)\n\ncovariates &lt;- c(\n  'ab_g_dyn__visit_age', # age\n  'ab_p_demo__saab_001', # sex\n  'ab_p_demo__income__hhold_001', # household income\n  # 'ph_y_pds__f_categ', # female puberty scale\n  # 'ph_y_pds__m_categ', # male puberty scale\n  'mr_y_adm__info__dev_serial' # scanner\n)\n\ntargets &lt;- c(\n  \"su_y_lowuse__isip_001\",\n  \"su_y_lowuse__isip_001__l\" # we'll sort this out later\n)\n\nid_vars &lt;- c(\n  'participant_id',\n  'session_id'\n)\n\npredictor_timepoint &lt;- 'ses-00A' # baseline\ntarget_timepoint &lt;- 'ses-03A' # Year 3\n\ncumulative_timepoints &lt;- c(\n  'ses-00A',\n  'ses-01A',\n  'ses-02A',\n  'ses-03A'\n)\n\nall_vars &lt;- c(\n  id_vars,\n  predictors,\n  covariates,\n  targets\n)\n\n# peel off categorical variables\ncategorical_list &lt;- c(\n  'session_id',\n  'ab_p_demo__saab_001',\n  'ab_p_demo__income__hhold_001',\n  'mr_y_adm__info__dev_serial'\n  # 'ph_y_pds__f_categ',\n  # 'ph_y_pds__m_categ'\n)\n\n\n\n\n# sort out variables, both to keep organized and arrange data types\npredictors = [\n    'mr_y_smri__vol__aseg__ag__lh_sum', # left amygdala vol\n    'mr_y_smri__vol__aseg__ag__rh_sum' # right amygdala vol\n]\n\ncovariates = [\n    'ab_g_dyn__visit_age', # age\n    'ab_p_demo__saab_001', # sex\n    'ab_p_demo__income__hhold_001', # household income\n    # 'ph_y_pds__f_categ', # female puberty scale\n    # 'ph_y_pds__m_categ', # male puberty scale\n    'mr_y_adm__info__dev_serial' # scanner\n]\n\ntargets = [\n    \"su_y_lowuse__isip_001\",\n    \"su_y_lowuse__isip_001__l\" # we'll sort this out later\n]\n\nid_vars = [\n    'participant_id',\n    'session_id'\n]\n\npredictor_timepoint = 'ses-00A' # baseline\ntarget_timepoint = 'ses-03A' # Year 3\n\ncumulative_timepoints = [\n    'ses-00A',\n    'ses-01A',\n    'ses-02A',\n    'ses-03A'\n]\n\nall_vars = id_vars + predictors + covariates + targets\n\n# peel off categorical variables\ncategorical_list = [\n    'session_id',\n    'ab_p_demo__saab_001',\n    'ab_p_demo__income__hhold_001',\n    'mr_y_adm__info__dev_serial'\n    # 'ph_y_pds__f_categ',\n    # 'ph_y_pds__m_categ'\n]\n\n\n\n\nNeed to do a few things:\n\nMake a subset of the dataset using all_vars\nMake sure categorical variables are represented as such using categorical_list\nConstruct a predictor dataset of baseline variables\nConstruct a target dataset of Year 3 variables\nCombine longitudinal variables into one target\n\n\nRPython\n\n\n\nsubset &lt;- df %&gt;% \n  select(all_of(all_vars)) %&gt;%\n  mutate(across(all_of(categorical_list), as.factor))\n\n# make predictor (baseline) dataset\nX &lt;- subset %&gt;% \n  filter(session_id == predictor_timepoint) %&gt;%\n  select(all_of(c(id_vars, predictors, covariates)))\n\n# make target (Year 3) dataset, filter for cumulative timepoints\ny &lt;- subset %&gt;%\n  filter(session_id %in% cumulative_timepoints) %&gt;%\n  select(all_of(c(id_vars, targets)))\n\n\n\n\nsubset = df[all_vars].copy()\nsubset[categorical_list] = subset[categorical_list].astype('category')\n\n# make predictor (baseline) dataset\nX = subset[subset['session_id'] == predictor_timepoint][id_vars + predictors + covariates]\n\n# make target (Year 3) dataset, filter for cumulative timepoints\ny = subset[subset['session_id'].isin(cumulative_timepoints)][id_vars + targets]\ny = y[y['session_id'].isin(cumulative_timepoints)]\n\n\n\n\nBaseline “sips” and longitudinal sips are recorded in different variables. We’ll add them together.\n\nRPython\n\n\n\ny &lt;- y %&gt;%\n  rowwise() %&gt;%\n  mutate(sips_combined = sum(c_across(where(is.numeric)), na.rm = TRUE)) %&gt;%\n  select(all_of(id_vars), sips_combined)\ny\n\n\n  \n\n\n\n\n\n\ny['sips_combined'] = np.sum(y[targets], axis=1)\ny = y.drop(targets, axis=1)\ny\n\n      participant_id session_id  sips_combined\n0       sub-003RTV85    ses-00A            0.0\n1       sub-003RTV85    ses-01A            0.0\n2       sub-003RTV85    ses-02A            0.0\n3       sub-003RTV85    ses-03A            2.0\n6       sub-005V6D2C    ses-00A            0.0\n...              ...        ...            ...\n68182   sub-ZZZNB0XC    ses-03A            0.0\n68185   sub-ZZZP87KR    ses-00A            0.0\n68186   sub-ZZZP87KR    ses-01A            0.0\n68187   sub-ZZZP87KR    ses-02A            0.0\n68188   sub-ZZZP87KR    ses-03A            0.0\n\n[44511 rows x 3 columns]\n\n\n\n\n\nThen we need to pivot this new variable to make a cumulative sips variable.\n\nRPython\n\n\n\ny_pivot &lt;- y %&gt;%\n  tidyr::pivot_wider(id_cols = 'participant_id',\n                     names_from = 'session_id',\n                     values_from = 'sips_combined')\ny_pivot\n\n\n  \n\n\n\n\n\n\ny_pivot = pd.pivot(y, \n                    index='participant_id', \n                    columns='session_id', \n                    values='sips_combined')\ny_pivot\n\nsession_id      ses-00A  ses-01A  ses-02A  ses-03A\nparticipant_id                                    \nsub-003RTV85        0.0      0.0      0.0      2.0\nsub-005V6D2C        0.0      0.0      0.0      0.0\nsub-007W6H7B        1.0      NaN      NaN     11.0\nsub-00BD7VDC        8.0      1.0      0.0      NaN\nsub-00CY2MDM        0.0      0.0      0.0      0.0\n...                 ...      ...      ...      ...\nsub-ZZNX6W2P        0.0      0.0      0.0      0.0\nsub-ZZPKBDAC        3.0      0.0      0.0      0.0\nsub-ZZZ2ALR6        0.0      0.0      0.0      1.0\nsub-ZZZNB0XC        0.0      NaN      NaN      0.0\nsub-ZZZP87KR        0.0      0.0      0.0      0.0\n\n[11868 rows x 4 columns]\n\n\n\n\n\nAdd together values from baseline through year 3\n\nRPython\n\n\n\ny &lt;- y_pivot %&gt;% \n  rowwise() %&gt;% \n  mutate(year3_sips = sum(c_across(where(is.numeric)), na.rm = TRUE)) %&gt;%\n  select(participant_id, year3_sips)\n\ny\n\n\n  \n\n\n\n\n\n\ny_pivot['sips'] = np.sum(y_pivot[cumulative_timepoints], axis=1)\ny = y_pivot.drop(cumulative_timepoints, axis=1)\ny\n\nsession_id      sips\nparticipant_id      \nsub-003RTV85     2.0\nsub-005V6D2C     0.0\nsub-007W6H7B    12.0\nsub-00BD7VDC     9.0\nsub-00CY2MDM     0.0\n...              ...\nsub-ZZNX6W2P     0.0\nsub-ZZPKBDAC     3.0\nsub-ZZZ2ALR6     1.0\nsub-ZZZNB0XC     0.0\nsub-ZZZP87KR     0.0\n\n[11868 rows x 1 columns]\n\n\n\n\n\nPut datasets back together\n\nRPython\n\n\n\ndata &lt;- cbind(X, y)  %&gt;% tidyr::drop_na() # drop all missing rows\nwrite.csv(data, \"../data/03_model_input/alcohol_model_input.csv\") # save to disk\n\n\n\n\ndata = pd.concat([X.set_index('participant_id'), y], axis=1).reset_index()\ndata = data.dropna()\n\ndata.to_csv(\"../data/03_model_input/alcohol_model_input.csv\", index=False)\n\n\n\n\nFit a basic linear mixed effects model:\n\nRPython\n\n\n\nfm1 &lt;- year3_sips ~ \n  mr_y_smri__vol__aseg__ag__lh_sum + \n  mr_y_smri__vol__aseg__ag__rh_sum +\n  ab_p_demo__saab_001 +\n  ab_g_dyn__visit_age +\n  ab_p_demo__income__hhold_001 +\n  (1 | mr_y_adm__info__dev_serial)\n\nfit_1 &lt;- lmer(fm1, data = data)\nsummary(fit_1)\n\nLinear mixed model fit by REML. t-tests use Satterthwaite's method [\nlmerModLmerTest]\nFormula: fm1\n   Data: data\n\nREML criterion at convergence: 88483.9\n\nScaled residuals: \n   Min     1Q Median     3Q    Max \n-0.466 -0.204 -0.120 -0.029 52.129 \n\nRandom effects:\n Groups                     Name        Variance Std.Dev.\n mr_y_adm__info__dev_serial (Intercept)   1.014   1.007  \n Residual                               218.710  14.789  \nNumber of obs: 10754, groups:  mr_y_adm__info__dev_serial, 29\n\nFixed effects:\n                                   Estimate Std. Error         df t value\n(Intercept)                      -1.029e+01  2.717e+00  8.806e+03  -3.788\nmr_y_smri__vol__aseg__ag__lh_sum  2.296e-03  1.015e-03  4.478e+03   2.263\nmr_y_smri__vol__aseg__ag__rh_sum -8.013e-04  1.061e-03  9.846e+03  -0.755\nab_p_demo__saab_0012             -6.745e-02  3.091e-01  1.073e+04  -0.218\nab_p_demo__saab_0013             -2.684e-01  1.047e+01  1.073e+04  -0.026\nab_g_dyn__visit_age               8.523e-01  2.313e-01  1.052e+04   3.685\nab_p_demo__income__hhold_0012     1.478e-01  1.037e+00  1.073e+04   0.143\nab_p_demo__income__hhold_0013     3.384e-01  1.163e+00  1.074e+04   0.291\nab_p_demo__income__hhold_0014     2.208e-01  9.854e-01  1.074e+04   0.224\nab_p_demo__income__hhold_0015     1.581e+00  9.420e-01  1.074e+04   1.679\nab_p_demo__income__hhold_0016     1.262e+00  8.880e-01  1.071e+04   1.421\nab_p_demo__income__hhold_0017     1.548e+00  8.394e-01  1.061e+04   1.844\nab_p_demo__income__hhold_0018     2.291e+00  8.389e-01  1.043e+04   2.732\nab_p_demo__income__hhold_0019     2.733e+00  7.956e-01  1.023e+04   3.435\nab_p_demo__income__hhold_00110    3.008e+00  8.656e-01  1.000e+04   3.475\n                                 Pr(&gt;|t|)    \n(Intercept)                      0.000153 ***\nmr_y_smri__vol__aseg__ag__lh_sum 0.023699 *  \nmr_y_smri__vol__aseg__ag__rh_sum 0.450336    \nab_p_demo__saab_0012             0.827268    \nab_p_demo__saab_0013             0.979548    \nab_g_dyn__visit_age              0.000230 ***\nab_p_demo__income__hhold_0012    0.886654    \nab_p_demo__income__hhold_0013    0.770992    \nab_p_demo__income__hhold_0014    0.822662    \nab_p_demo__income__hhold_0015    0.093238 .  \nab_p_demo__income__hhold_0016    0.155451    \nab_p_demo__income__hhold_0017    0.065208 .  \nab_p_demo__income__hhold_0018    0.006314 ** \nab_p_demo__income__hhold_0019    0.000595 ***\nab_p_demo__income__hhold_00110   0.000513 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\n\n\n\nfm1 = \"\"\"\nsips ~ mr_y_smri__vol__aseg__ag__lh_sum + \n    mr_y_smri__vol__aseg__ag__rh_sum + \n    ab_p_demo__saab_001 + \n    ab_g_dyn__visit_age + \n    ab_p_demo__income__hhold_001\n\"\"\"\n\n# Fit the model\nfit_1 = smf.mixedlm(fm1, data, groups=data['mr_y_adm__info__dev_serial'])\nfit_1 = fit_1.fit()\nprint(fit_1.summary())\n\n                      Mixed Linear Model Regression Results\n=================================================================================\nModel:                    MixedLM         Dependent Variable:         sips       \nNo. Observations:         10754           Method:                     REML       \nNo. Groups:               29              Scale:                      218.7099   \nMin. group size:          21              Log-Likelihood:             -44241.9389\nMax. group size:          986             Converged:                  Yes        \nMean group size:          370.8                                                  \n---------------------------------------------------------------------------------\n                                      Coef.  Std.Err.   z    P&gt;|z|  [0.025 0.975]\n---------------------------------------------------------------------------------\nIntercept                            -10.292    2.718 -3.787 0.000 -15.619 -4.966\nab_p_demo__saab_001[T.2.0]            -0.067    0.309 -0.218 0.827  -0.673  0.538\nab_p_demo__saab_001[T.3.0]            -0.268   10.471 -0.026 0.980 -20.791 20.255\nab_p_demo__income__hhold_001[T.2.0]    0.148    1.037  0.143 0.887  -1.884  2.180\nab_p_demo__income__hhold_001[T.3.0]    0.338    1.163  0.291 0.771  -1.940  2.617\nab_p_demo__income__hhold_001[T.4.0]    0.221    0.986  0.224 0.823  -1.711  2.153\nab_p_demo__income__hhold_001[T.5.0]    1.581    0.942  1.679 0.093  -0.265  3.428\nab_p_demo__income__hhold_001[T.6.0]    1.262    0.888  1.420 0.156  -0.480  3.003\nab_p_demo__income__hhold_001[T.7.0]    1.548    0.840  1.844 0.065  -0.098  3.193\nab_p_demo__income__hhold_001[T.8.0]    2.291    0.839  2.731 0.006   0.647  3.936\nab_p_demo__income__hhold_001[T.9.0]    2.733    0.796  3.435 0.001   1.173  4.292\nab_p_demo__income__hhold_001[T.10.0]   3.008    0.866  3.475 0.001   1.311  4.705\nmr_y_smri__vol__aseg__ag__lh_sum       0.002    0.001  2.255 0.024   0.000  0.004\nmr_y_smri__vol__aseg__ag__rh_sum      -0.001    0.001 -0.754 0.451  -0.003  0.001\nab_g_dyn__visit_age                    0.852    0.232  3.680 0.000   0.398  1.306\nGroup Var                              1.014    0.028                            \n================================================================================="
  }
]